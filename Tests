./queue_tester_callback --help
./queue_tester_callback -h

./queue_tester_callback -d 20 -q 2 -l false --local-threshold-type=static --local-threshold-static=20000 --global-threshold-static=50000 --q1-ratio=1 --q2-ratio=1


gdb --args <program> <args>
gdb --args queue_tester_callback -d 20 -q 2 -l false --local-threshold-type=static --local-threshold-static=20000 --global-threshold-static=50000 --q1-ratio=1 --q2-ratio=1

#GDB and CORE DUMPS
set print thread-events off
http://radek.io/2012/02/11/core-dumps-in-fedora/
/var/spool/abrt/
gdb a.out core.19233

gdb /home/ovasko/DP/bin/queue_tester_callback_2 ccpp-2016-04-05-15:32:16-18721/coredump


./queue_tester_callback -d 100 -q 1 -l false --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1 




log_debug31879: 
   pid=31879
   OPT: Program duration set to 5
   OPT: Queue count set to 2
   OPT: load balancing thread will NOT be enabled
   OPT: Q1 ratio set to 0
   OPT: Q2 ratio set to 1
   OPT: Q3 ratio set to 1
   OPT: Q4 ratio set to 1

log_debug3892: 
   pid=3892
   OPT: Program duration set to 300
   OPT: Queue count set to 2
   OPT: load balancing thread will NOT be enabled
   OPT: Q1 ratio set to 0
   OPT: Q2 ratio set to 0
   OPT: Q3 ratio set to 1
   OPT: Q4 ratio set to 1

gdb --args queue_tester_callback_2 -d 300 -q 2 -l false --q1-ratio=0 --q2-ratio=0 --q3-ratio=1 --q4-ratio=1
./queue_tester_callback_2 -d 300 -q 4 -l false --q1-ratio=0 --q2-ratio=0 --q3-ratio=0 --q4-ratio=0

#FREE RAM
free && sync && echo 3 > /proc/sys/vm/drop_caches && free

#Test basic queue functionality and performance
bin/queue_tester_rand_computation_debug -d 30 -q 1 -l false --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1
bin/queue_tester_rand_computation_debug -d 100 -q 1 -l false --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1
bin/queue_tester_rand_computation_debug -d 360 -q 1 -l false --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1

#Test computation load via ratios
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l false --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l false --q1-ratio=15 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l false --q1-ratio=15 --q2-ratio=15 --q3-ratio=1 --q4-ratio=1
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l false --q1-ratio=15 --q2-ratio=15 --q3-ratio=15 --q4-ratio=1
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l false --q1-ratio=16 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16

#Test STATIC local thresholds for EQUAL local balancing
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1 --local-threshold-type=static --local-threshold-static=800 --local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=8 --q2-ratio=8 --q3-ratio=8 --q4-ratio=8 --local-threshold-type=static --local-threshold-static=800 --local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=16 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=static --local-threshold-static=800 --local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=static --local-threshold-static=800 --local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=static --local-threshold-static=800 --local-balance-type=all

#Test STATIC local thresholds for PAIR local balancing
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1 --local-threshold-type=static --local-threshold-static=??? --local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=8 --q2-ratio=8 --q3-ratio=8 --q4-ratio=8 --local-threshold-type=static --local-threshold-static=800 --local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=16 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=static --local-threshold-static=800 --local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=static --local-threshold-static=800 --local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=static --local-threshold-static=800 --local-balance-type=pair


#Test PERCENTAGE local thresholds for PAIR local balancing
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1 --local-threshold-type=percent local-threshold-percent=8 --local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=8 --q2-ratio=8 --q3-ratio=8 --q4-ratio=8 --local-threshold-type=percent local-threshold-percent=8 --local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=16 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-threshold-percent=8 --local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-threshold-percent=8 --local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-threshold-percent=8 --local-balance-type=all

bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1 --local-threshold-type=percent local-threshold-percent=8 --local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=8 --q2-ratio=8 --q3-ratio=8 --q4-ratio=8 --local-threshold-type=percent local-threshold-percent=8 --local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=16 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-threshold-percent=8 --local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-threshold-percent=8 --local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-threshold-percent=8 --local-balance-type=pair

#Test DYNAMIC local thresholds for PAIR local balancing
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1 --local-threshold-type=dynamic --local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=8 --q2-ratio=8 --q3-ratio=8 --q4-ratio=8 --local-threshold-type=percent --local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=16 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent --local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent --local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent --local-balance-type=all

bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1 --local-threshold-type=percent --local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=8 --q2-ratio=8 --q3-ratio=8 --q4-ratio=8 --local-threshold-type=percent --local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=16 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent --local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent --local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent --local-balance-type=pair


#NEW
#2CPU + HT
#
Distributed queues in shared memory: multicore performance and scalability through quantitative relaxation
./bin/queue_tester_rand_computation -d 10 -q 1 -l false --q1-ins-ratio=1 --q1-rm-ratio=1

./bin/queue_tester_rand_computation -d 10 -q 2 -l false --q1-ins-ratio=1 --q2-ins-ratio=1 --q1-rm-ratio=1 --q2-rm-ratio=1 --local-balance-type=all
./bin/queue_tester_rand_computation -d 10 -q 2 -l false --q1-ins-ratio=1 --q2-ins-ratio=1 --q1-rm-ratio=1 --q2-rm-ratio=1 --local-balance-type=pair

./bin/queue_tester_rand_computation -d 10 -q 2 -l false --q1-ins-ratio=1 --q2-ins-ratio=1 --q1-rm-ratio=0 --q2-rm-ratio=1 --local-balance-type=all
./bin/queue_tester_rand_computation -d 10 -q 2 -l false --q1-ins-ratio=1 --q2-ins-ratio=1 --q1-rm-ratio=0 --q2-rm-ratio=1 --local-balance-type=pair

./bin/queue_tester_rand_computation -d 10 -q 4 -l false --q1-ins-ratio=1 --q2-ins-ratio=1 --q3-ins-ratio=1 --q4-ins-ratio=1 --q1-rm-ratio=0 --q2-rm-ratio=1 --q3-rm-ratio=1 --q4-rm-ratio=1 --local-balance-type=all
./bin/queue_tester_rand_computation -d 10 -q 4 -l false --q1-ins-ratio=1 --q2-ins-ratio=1 --q3-ins-ratio=1 --q4-ins-ratio=1 --q1-rm-ratio=0 --q2-rm-ratio=0 --q3-rm-ratio=1 --q4-rm-ratio=1 --local-balance-type=all
./bin/queue_tester_rand_computation -d 10 -q 4 -l false --q1-ins-ratio=1 --q2-ins-ratio=1 --q3-ins-ratio=1 --q4-ins-ratio=1 --q1-rm-ratio=0 --q2-rm-ratio=1 --q3-rm-ratio=1 --q4-rm-ratio=1 --local-balance-type=pair
./bin/queue_tester_rand_computation -d 10 -q 4 -l false --q1-ins-ratio=1 --q2-ins-ratio=1 --q3-ins-ratio=1 --q4-ins-ratio=1 --q1-rm-ratio=0 --q2-rm-ratio=0 --q3-rm-ratio=0 --q4-rm-ratio=1 --local-balance-type=pair

./bin/queue_tester_insert_performance -q 1 -a 80000000 #TEST WITH DIFFERENT INSERT METHODS
./bin/queue_tester_insert_performance -q 2 -a 80000000
./bin/queue_tester_insert_performance -q 4 -a 80000000
./bin/queue_tester_insert_performance -q 8 -a 80000000
./bin/queue_tester_insert_performance -q 16 -a 80000000
./bin/queue_tester_insert_performance -q 1 -d 7
./bin/queue_tester_insert_performance -q 2 -d 7
./bin/queue_tester_insert_performance -q 4 -d 7
./bin/queue_tester_insert_performance -q 8 -d 7
./bin/queue_tester_insert_performance -q 16 -d 7

./bin/queue_tester_remove_performance -q 1 -a 80000000
./bin/queue_tester_remove_performance -q 2 -a 80000000
./bin/queue_tester_remove_performance -q 4 -a 80000000
./bin/queue_tester_remove_performance -q 8 -a 80000000
./bin/queue_tester_remove_performance -q 16 -a 80000000
./bin/queue_tester_remove_performance -q 32 -a 80000000
./bin/queue_tester_remove_performance -q 64 -a 80000000


mpirun -np 2 bin/queue_tester_rand_computation -d 10 -q 4 -p 4 -c 2 -l false --local-balance-type=all
mpirun -np 2 bin/queue_tester_rand_computation -d 10 -q 4 -p 4 -c 2 -l false --local-balance-type=pair
mpirun -np 4 bin/queue_tester_rand_computation -d 10 -q 4 -p 4 -c 2 -l false --local-balance-type=all
mpirun -np 4 bin/queue_tester_rand_computation -d 10 -q 4 -p 4 -c 2 -l false --local-balance-type=pair


###########################################################

for i in $(seq 1 7); do
  bin/queue_tester_remove_performance -q 8 -a 80000000
  sleep 3
done

for i in $(seq 1 7); do
  bin/queue_tester_rand_computation -d 10 -q 1 -p 1 -c 1 --local-balance-type=pair
  sleep 3
done

for i in $(seq 1 7); do
  echo "LD_PRELOAD=/usr/lib/libhoard.so:/usr/local/lib/libgsl.so.19 bin/queue_tester_rand_computation -q 8 -c 8 -p 4 -a 40000000 --local-balance-type=pair -s 10000000"
  LD_PRELOAD=/usr/lib/libhoard.so:/usr/local/lib/libgsl.so.19 bin/queue_tester_rand_computation -q 8 -c 8 -p 4 -a 40000000 --local-balance-type=pair -s 10000000
  sleep 3
done

for i in $(seq 1 7); do
  echo "LD_PRELOAD=/usr/lib/libhoard.so:/usr/local/lib/libgsl.so.19 bin/queue_tester_rand_computation -q 8 -c 8 -p 4 -a 300000000 --local-balance-type=pair -s 10000000"
  LD_PRELOAD=/usr/lib/libhoard.so:/usr/local/lib/libgsl.so.19 bin/queue_tester_rand_computation -q 8 -c 8 -p 4 -a 300000000 --local-balance-type=pair -s 10000000
  sleep 3
done

for i in $(seq 1 7); do
  echo "LD_PRELOAD=/usr/lib/libhoard.so:/usr/local/lib/libgsl.so.19 bin/queue_tester_rand_computation -q 8 -c 8 -p 4 -a 1200000000 --local-balance-type=pair -s 10000000"
  LD_PRELOAD=/usr/lib/libhoard.so:/usr/local/lib/libgsl.so.19 bin/queue_tester_rand_computation -q 8 -c 8 -p 4 -a 1200000000 --local-balance-type=pair -s 10000000
  sleep 3
done

amounts=(20000000 150000000 600000000)
for a in ${amounts[@]}; do
  for i in $(seq 1 7); do
    cmd="LD_PRELOAD=/usr/lib/libhoard.so:/usr/local/lib/libgsl.so.19 mpirun -np 2 bin/queue_tester_rand_computation -q 2 -c 2 -p 2 -a $a --local-balance-type=pair -s $size"
    echo $cmd
    LD_PRELOAD=/usr/lib/libhoard.so:/usr/local/lib/libgsl.so.19 mpirun -np 2 bin/queue_tester_rand_computation -q 2 -c 2 -p 2 -a $a --local-balance-type=pair -s 20000000
    sleep 3
  done
done

amounts=(40000000 300000000 1200000000)
for a in ${amounts[@]}; do
  for i in $(seq 1 7); do
    cmd="LD_PRELOAD=/usr/lib/libhoard.so:/usr/local/lib/libgsl.so.19 bin/queue_tester_rand_computation -q 16 -c 16 -p 16 -a $a --local-balance-type=pair -s 5000000"
    echo $cmd
    LD_PRELOAD=/usr/lib/libhoard.so:/usr/local/lib/libgsl.so.19 bin/queue_tester_rand_computation -q 16 -c 16 -p 16 -a $a --local-balance-type=pair -s 5000000
    sleep 3
  done
done


valgrind --tool=callgrind bin/queue_tester_remove_performance -q 2 -a 80000000

ProfilerStart("/tmp/dump.txt");
pprof --text /home/ovasko/DP/bin/queue_tester_remove_performance dump.txt > /tmp/dump_pprof.txt
https://sploitfun.wordpress.com/2015/02/10/understanding-glibc-malloc/

pprof --svg --scale 2 /home/ovasko/DP/bin/queue_tester_remove_performance dump.txt > /tmp/dump_pprof.svg

export LD_PRELOAD=/usr/lib/libhoard.so

LD_PRELOAD=/usr/lib/libhoard.so bin/queue_tester_sequential -d 10 -q 1
LD_PRELOAD=/usr/lib/libhoard.so bin/queue_tester_sequential -d 60 -q 1
LD_PRELOAD=/usr/lib/libhoard.so bin/queue_tester_rand_computation -d 10 -q 1 -p 1 -c 1 -s 80000000 --local-balance-type=pair
LD_PRELOAD=/usr/lib/libhoard.so bin/queue_tester_rand_computation -d 10 -q 2 -p 2 -c 2 -s 80000000 --local-balance-type=pair
LD_PRELOAD=/usr/lib/libhoard.so bin/queue_tester_rand_computation -d 10 -q 4 -p 2 -c 4 -s 80000000 --local-balance-type=pair
LD_PRELOAD=/usr/lib/libhoard.so bin/queue_tester_rand_computation -d 60 -q 1 -p 1 -c 1 -s 80000000 --local-balance-type=pair
LD_PRELOAD=/usr/lib/libhoard.so bin/queue_tester_rand_computation -d 60 -q 2 -p 2 -c 2 -s 80000000 --local-balance-type=pair
LD_PRELOAD=/usr/lib/libhoard.so bin/queue_tester_rand_computation -d 60 -q 4 -p 2 -c 4 -s 80000000 --local-balance-type=pair

LD_PRELOAD=/usr/lib/libhoard.so mpirun -np 2  bin/queue_tester_sequential -d 60 -q 1


LD_PRELOAD=/usr/lib/libhoard.so bin/queue_tester_rand_computation -d 7 -q 1 -p 1 -c 0 --local-balance-type=pair
LD_PRELOAD=/usr/lib/libhoard.so bin/queue_tester_sequential -d 7 -q 1

LD_PRELOAD=/usr/lib/libhoard.so:/usr/local/lib/libgsl.so.19 bin/queue_tester_sequential -d 1 -q 1

LD_PRELOAD=/usr/lib/libhoard.so:/usr/local/lib/libgsl.so.19 bin/queue_tester_rand_computation -d 7 -q 4 -p 4 -c 1 --local-balance-type=pair
LD_PRELOAD=/usr/lib/libhoard.so:/usr/local/lib/libgsl.so.19 bin/queue_tester_sequential -d 7 -q 1

###########################################################
30.4.2016 TESTS:
1. 7x
bin/queue_tester_sequential -d 10 -q 1
R1 32035000
R2 32125000
R3 32075000
R4 32115000
R5 32135000
R6 32020000
R7 32010000

1b.LD_PRELOAD=/usr/lib/libhoard.so mpirun -np 2  bin/queue_tester_sequential -d 10 -q 1
R1 hoard-120mil

2. 7x
bin/queue_tester_sequential -d 60 -q 1
R1 186650000 | hoard-364310000
R2 190565000
R3 191270000
R4 191130000
R5 192640000
R6 192685000
R7 193035000

3. 7x
bin/queue_tester_sequential -d 300 -q 1
R1 967385000
R2 967145000
R3 969780000
R4 963815000
R5 968265000
R6 968230000
R7 967175000

---------------------------------------

4. 7x
bin/queue_tester_insert_performance -q 1 -d 7
R1 39219999
R2 39549999
R3 39549999
R4 37299999
R5 38069999
R6 38679999
R7 38079999

5. 7x
bin/queue_tester_insert_performance -q 2 -d 7
R1 61399998
R2 56521018
R3 63392922
R4 57417437
R5 63609998
R6 62824798
R7 61627852

6. 7x
bin/queue_tester_insert_performance -q 4 -d 7
R1 60882754
R2 62734926
R3 62121238
R4 61156220
R5 61389996
R6 60327977
R7 60645244

7. 7x
bin/queue_tester_insert_performance -q 8 -d 7
R1 41248456
R2 43338756
R3 43170732
R4 43104991
R5 43136207
R6 42225453
R7 43490386

8. 7x
bin/queue_tester_insert_performance -q 16 -d 7
R1 39984511
R2 39661932
R3 39639709
R4 40134319
R5 39782807
R6 39175305
R7 36287877

-------------------------------------------

9. 7x
bin/queue_tester_insert_performance -q 1 -a 80000000
R1 14 sec, 316236892 nsec
R2 14 sec, 7295217 nsec
R3 14 sec, 44364565 nsec
R4 14 sec, 119432188 nsec
R5 14 sec, 124917873 nsec
R6 14 sec, 17951744 nsec
R7 14 sec, 561021078 nsec

10. 7x
bin/queue_tester_insert_performance -q 2 -d 80000000
R1 8 sec, 556512440 nsec
R2 8 sec, 725875453 nsec
R3 8 sec, 693104461 nsec
R4 8 sec, 659510696 nsec
R5 8 sec, 610939778 nsec
R6 8 sec, 792249392 nsec
R7 8 sec, 862672000 nsec

11. 7x
bin/queue_tester_insert_performance -q 4 -d 80000000
R1 8 sec, 823233550 nsec
R2 9 sec, 61939901 nsec
R3 8 sec, 908301805 nsec
R4 9 sec, 9438421 nsec
R5 9 sec, 48858489 nsec
R6 9 sec, 435083910 nsec
R7 9 sec, 34647546 nsec

12. 7x
bin/queue_tester_insert_performance -q 8 -d 80000000
R1 13 sec, 251770288 nsec
R2 13 sec, 283670897 nsec
R3 13 sec, 519508941 nsec
R4 13 sec, 939683370 nsec
R5 13 sec, 328067319 nsec
R6 13 sec, 115097219 nsec
R7 13 sec, 728428475 nsec

----------------------------------------------

#bin/queue_tester_remove_performance -q 1 -d 7
#Zly test, lebo pri roznych poctoch vlakien sa vytvori rozny pocet itemov.
#je potrebne mat konstatny pocet itemov a tie vybrat roznym poctom vlakien

----------------------------------------------

13. 7x
bin/queue_tester_remove_performance -q 1 -a 80000000
R1 7 sec, 571722443 nsec
R2 7 sec, 562389218 nsec
R3 7 sec, 473210739 nsec
R4 7 sec, 527310002 nsec
R5 7 sec, 840165671 nsec
R6 7 sec, 551062465 nsec
R7 7 sec, 487905860 nsec

14. 7x
bin/queue_tester_remove_performance -q 2 -a 80000000
R1 7 sec, 954710831 nsec
R2 7 sec, 811415050 nsec
R3 7 sec, 801925539 nsec
R4 8 sec, 172294783 nsec
R5 8 sec, 170088421 nsec
R6 7 sec, 873134652 nsec
R7 7 sec, 944408062 nsec

15. 7x
bin/queue_tester_remove_performance -q 4 -a 80000000
R1 6 sec, 291302149 nsec
R2 5 sec, 38819327 nsec
R3 6 sec, 426596289 nsec
R4 6 sec, 646094385 nsec
R5 6 sec, 396632009 nsec
R6 6 sec, 363346914 nsec
R7 6 sec, 328993102 nsec

16. 7x
bin/queue_tester_remove_performance -q 8 -a 80000000
R1 4 sec, 507730726
R2 4 sec, 664321948
R3 4 sec, 512102555
R4 4 sec, 612018505
R5 4 sec, 329419183
R6 4 sec, 452466733
R7 4 sec, 271900453

17. 7x
bin/queue_tester_remove_performance -q 16 -a 80000000
R1 4 sec, 629867234
R2 4 sec, 656707150
R3 4 sec, 676828883
R4 4 sec, 457370721
R5 4 sec, 757659440
R6 4 sec, 637228647
R7 4 sec, 581820509

18. 7x
bin/queue_tester_remove_performance -q 32 -a 80000000
R1 4 sec, 733195044
R2 4 sec, 844854207
R3 4 sec, 680666327
R4 4 sec, 782773873
R5 4 sec, 874744055
R6 4 sec, 721125971
R7 4 sec, 702208740

19. 7x
bin/queue_tester_remove_performance -q 64 -a 80000000
R1 5 sec, 18124836
R2 5 sec, 36098583
R3 5 sec, 213469755
R4 5 sec, 216383011
R5 5 sec, 119953898
R6 5 sec, 8299469 nsec
R7 4 sec, 964299497 nsec

20.
bin/queue_tester_remove_performance -q 128 -a 80000000
R1 5 sec, 118126943 nsec
R2 5 sec, 515736270 nsec
R3 5 sec, 357267674 nsec
R4 5 sec, 84125639 nsec
R5 5 sec, 817715642 nsec
R6 5 sec, 150794374 nsec
R7 5 sec, 344821242 nsec

-------------------------------------------------------------------------------
1. 
bin/queue_tester_rand_computation -d 10 -q 1 -p 1 -c 1 -s 80000000 --local-balance-type=pair
R1 15270000 | 17950000
R2 18590000 | 20080000
R3 20885000 | 17130000
R4 20780000 | 20780000
R5 18995000 | 20760000
R6 20900000 | 21000000
R7 16190000 | 20920000

2. 
bin/queue_tester_rand_computation -d 60 -q 1 -p 1 -c 1 -s 80000000 --local-balance-type=pair
R1 125675000 | hoard-185430000
R2 126045000 | 
R3 121020000 | 
R4 114035000 | 
R5 116005000 | 
R6 121545000 | 
R7 118910000 | 

3. 
bin/queue_tester_rand_computation -d 300 -q 1 -p 1 -c 1 -s 80000000 --local-balance-type=pair
R1 
R2 
R3 
R4 
R5 
R6 
R7 

4. 
bin/queue_tester_rand_computation -d 10 -q 2 -p 2 -c 2 -s 40000000 --local-balance-type=pair
R1 33420000 | 
R2 29605000 | 
R3 31165000 | 
R4 33150000 | 
R5 32835000 | 
R6 33475000 | 
R7 32690000 | 

5. 
bin/queue_tester_rand_computation -d 60 -q 2 -p 2 -c 2 -s 40000000 --local-balance-type=pair
R1 hoard-297340000
R2 
R3 
R4 
R5 
R6 
R7 

6. 
bin/queue_tester_rand_computation -d 300 -q 2 -p 2 -c 2 -s 40000000 --local-balance-type=pair
R1 
R2 
R3 
R4 
R5 
R6 
R7 

7.
bin/queue_tester_rand_computation -d 10 -q 2 -p 2 -c 1 -s 40000000 --local-balance-type=pair
R1 22700000 | 22520000
R2 22060000 | 22110000
R3 22895000 | 22830000
R4 22840000 | 23030000
R5 21675000 | 22340000
R6 21855000 | 22560000
R7 22035000 | 21870000

8.
bin/queue_tester_rand_computation -d 60 -q 2 -p 2 -c 1 -s 40000000 --local-balance-type=pair
R1 
R2 
R3 
R4 
R5 
R6 
R7 

9.
bin/queue_tester_rand_computation -d 300 -q 2 -p 2 -c 1 -s 40000000 --local-balance-type=pair
R1 
R2 
R3 
R4 
R5 
R6 
R7 

10.
bin/queue_tester_rand_computation -d 10 -q 4 -p 2 -c 4 -s 20000000 --local-balance-type=pair
R1 43245000 | 39590000
R2 41280000 | 42960000
R3 42185000 | 43330000
R4 41185000 | 44620000
R5 41690000 | 44430000
R6 41210000 | 44510000
R7 44070000 | 42860000

11.
bin/queue_tester_rand_computation -d 60 -q 4 -p 2 -c 4 -s 20000000 --local-balance-type=pair
R1 155860000 | 198010000 | 227730000
R2 157930000 | 196010000
R3 156830000 | 189850000
R4 159580000 | 201320000
R5 161020000 | 196020000
R6 160200000 | 195290000
R7 160530000 | 202070000

12.
bin/queue_tester_rand_computation -d 300 -q 4 -p 2 -c 4 -s 20000000 --local-balance-type=pair
R1 
R2 
R3 
R4 
R5 
R6 
R7 

bin/queue_tester_rand_computation -d 10 -q 4 -p 2 -c 4 -s 20000000 --local-balance-type=all
R1 
R2 
R3 
R4 
R5 
R6 
R7 

bin/queue_tester_rand_computation -d 60 -q 4 -p 2 -c 4 -s 20000000 --local-balance-type=all
R1 
R2 
R3 
R4 
R5 
R6 
R7 

bin/queue_tester_rand_computation -d 300 -q 4 -p 2 -c 4 -s 20000000 --local-balance-type=all
R1 
R2 
R3 
R4 
R5 
R6 
R7 

bin/queue_tester_rand_computation -d 10 -q 8 -p 2 -c 8 -s 10000000 --local-balance-type=pair
R1 
R2 
R3 
R4 
R5 
R6 
R7 

bin/queue_tester_rand_computation -d 60 -q 8 -p 2 -c 8 -s 10000000 --local-balance-type=pair
R1 
R2 
R3 
R4 
R5 
R6 
R7 

bin/queue_tester_rand_computation -d 300 -q 8 -p 2 -c 8 -s 10000000 --local-balance-type=pair
R1 
R2 
R3 
R4 
R5 
R6 
R7 

bin/queue_tester_rand_computation -d 10 -q 4 -p 4 -c 2 -s 20000000 --local-balance-type=pair
R1 31000000
R2 32590000
R3 31520000
R4 31990000
R5 32100000
R6 31700000
R7 31640000

bin/queue_tester_rand_computation -d 10 -q 4 -p 4 -c 4 -s 20000000 --local-balance-type=pair
R1 32795000
R2 33070000
R3 33130000
R4 33185000
R5 33190000
R6 33490000
R7 33300000

bin/queue_tester_rand_computation -d 10 -q 8 -p 4 -c 8 -s 10000000 --local-balance-type=pair
R1 
R2 
R3 
R4 
R5 
R6 
R7 

bin/queue_tester_rand_computation -d 10 -q 8 -p 2 -c 8 -s 10000000 --local-balance-type=pair
R1 39815000 | 
R2 40395000 | 
R3 43005000 | 
R4 40715000 | 
R5 40105000 | 
R6 40755000 | 
R7 40220000 | 

bin/queue_tester_rand_computation -d 60 -q 8 -p 2 -c 8 -s 10000000 --local-balance-type=pair
R1  | 195970000
R2  | 206790000
R3  | 190050000
R4  | 191550000
R5  | 188300000
R6  | 192130000
R7  | 202880000

bin/queue_tester_rand_computation -d 300 -q 8 -p 2 -c 8 -s 10000000 --local-balance-type=pair

bin/queue_tester_rand_computation -d 10 -q 16 -p 2 -c 16 -s 5000000 --local-balance-type=pair
R1 40820000
R2 43905000
R3 42125000
R4 41440000
R5 43745000
R6 44485000
R7 40605000


