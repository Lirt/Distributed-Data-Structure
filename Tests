./queue_tester_callback --help
./queue_tester_callback -h

./queue_tester_callback -d 20 -q 2 -l false --local-threshold-type=static --local-threshold-static=20000 --global-threshold-static=50000 --q1-ratio=1 --q2-ratio=1


gdb --args <program> <args>
gdb --args queue_tester_callback -d 20 -q 2 -l false --local-threshold-type=static --local-threshold-static=20000 --global-threshold-static=50000 --q1-ratio=1 --q2-ratio=1

#GDB and CORE DUMPS
set print thread-events off
http://radek.io/2012/02/11/core-dumps-in-fedora/
/var/spool/abrt/
gdb a.out core.19233

gdb /home/ovasko/DP/bin/queue_tester_callback_2 ccpp-2016-04-05-15:32:16-18721/coredump


./queue_tester_callback -d 100 -q 1 -l false --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1 




log_debug31879: 
   pid=31879
   OPT: Program duration set to 5
   OPT: Queue count set to 2
   OPT: load balancing thread will NOT be enabled
   OPT: Q1 ratio set to 0
   OPT: Q2 ratio set to 1
   OPT: Q3 ratio set to 1
   OPT: Q4 ratio set to 1

log_debug3892: 
   pid=3892
   OPT: Program duration set to 300
   OPT: Queue count set to 2
   OPT: load balancing thread will NOT be enabled
   OPT: Q1 ratio set to 0
   OPT: Q2 ratio set to 0
   OPT: Q3 ratio set to 1
   OPT: Q4 ratio set to 1

gdb --args queue_tester_callback_2 -d 300 -q 2 -l false --q1-ratio=0 --q2-ratio=0 --q3-ratio=1 --q4-ratio=1
./queue_tester_callback_2 -d 300 -q 4 -l false --q1-ratio=0 --q2-ratio=0 --q3-ratio=0 --q4-ratio=0



#Test basic queue functionality and performance
bin/queue_tester_rand_computation_debug -d 30 -q 1 -l false --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1
bin/queue_tester_rand_computation_debug -d 100 -q 1 -l false --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1
bin/queue_tester_rand_computation_debug -d 360 -q 1 -l false --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1


#Test computation load via ratios
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l false --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l false --q1-ratio=15 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l false --q1-ratio=15 --q2-ratio=15 --q3-ratio=1 --q4-ratio=1
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l false --q1-ratio=15 --q2-ratio=15 --q3-ratio=15 --q4-ratio=1
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l false --q1-ratio=16 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16

#Test STATIC local thresholds for EQUAL local balancing
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1 --local-threshold-type=static --local-threshold-static=??? local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=8 --q2-ratio=8 --q3-ratio=8 --q4-ratio=8 --local-threshold-type=static --local-threshold-static=800 local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=16 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=static --local-threshold-static=800 local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=static --local-threshold-static=800 local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=static --local-threshold-static=800 local-balance-type=all

#Test STATIC local thresholds for PAIR local balancing
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1 --local-threshold-type=static --local-threshold-static=??? local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=8 --q2-ratio=8 --q3-ratio=8 --q4-ratio=8 --local-threshold-type=static --local-threshold-static=800 local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=16 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=static --local-threshold-static=800 local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=static --local-threshold-static=800 local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=static --local-threshold-static=800 local-balance-type=pair


#Test PERCENTAGE local thresholds for PAIR local balancing
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1 --local-threshold-type=percent local-threshold-percent=8 local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=8 --q2-ratio=8 --q3-ratio=8 --q4-ratio=8 --local-threshold-type=percent local-threshold-percent=8 local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=16 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-threshold-percent=8 local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-threshold-percent=8 local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-threshold-percent=8 local-balance-type=all

bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1 --local-threshold-type=percent local-threshold-percent=8 local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=8 --q2-ratio=8 --q3-ratio=8 --q4-ratio=8 --local-threshold-type=percent local-threshold-percent=8 local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=16 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-threshold-percent=8 local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-threshold-percent=8 local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-threshold-percent=8 local-balance-type=pair

#Test DYNAMIC local thresholds for PAIR local balancing
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1 --local-threshold-type=dynamic local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=8 --q2-ratio=8 --q3-ratio=8 --q4-ratio=8 --local-threshold-type=percent local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=16 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-balance-type=all
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-balance-type=all

bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=1 --q4-ratio=1 --local-threshold-type=percent local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=8 --q2-ratio=8 --q3-ratio=8 --q4-ratio=8 --local-threshold-type=percent local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=16 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=16 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-balance-type=pair
bin/queue_tester_rand_computation_debug -d 100 -q 4 -l true  --q1-ratio=1 --q2-ratio=1 --q3-ratio=16 --q4-ratio=16 --local-threshold-type=percent local-balance-type=pair

#Test lo
    { "local-threshold-type",     154, "static/percent/dynamic", 0, "Choses local threshold type", 2},
    { "local-balance-type",       155, "all/pair", 0, "Choses local balancing type. Type all balances all queues to same size. \
    Type Pair balances only queue with lowest size with highest size queue.", 2},
